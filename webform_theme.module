<?php

/**
 * Get all available themes.
 */
function webform_theme_list_themes() {
  $theme_list = array();
  // Get current list of themes.
  $themes = system_rebuild_theme_data();
  uasort($themes, 'system_sort_modules_by_info_name');

  foreach ($themes as & $theme) {
    if (!empty($theme->info['hidden'])) {
      continue;
    }
    $theme_list[$theme->name] = $theme->info['name'];
  }

  return $theme_list;
}

/**
 * Implementation of hook_form_alter().
 */
function webform_theme_form_system_themes_admin_form_alter(&$form, $form_state) {
  $form['admin_theme']['webform_theme'] = array(
    '#type' => 'fieldset',
    '#title' => t('Webforms'),
    '#collapsible' => TRUE,
    '#description' => t('Choose theme for webforms.'),
  );

  $theme_list = webform_theme_list_themes();

  $form['admin_theme']['webform_theme']['theme_name'] = array(
    '#type' => 'select',
    '#options' => array(
      0 => t('Default theme')) + $theme_list,
    '#title' => t('Theme for webforms'),
    '#description' => t('Choose theme for webforms.'),
    '#default_value' => variable_get('webform_theme_defaulttheme', 0),
  );

  // Add extra submit
  $form['#submit'][] = 'webform_theme_system_themes_admin_form_submit';
  $form['admin_theme']['actions']['#weight'] = 11;
}

/**
 * Process system_themes_form extra submit.
 */
function webform_theme_system_themes_admin_form_submit($form, &$form_state) {
  variable_set('webform_theme_defaulttheme', $form_state['values']['theme_name']);
}

/**
 * Implementation of hook_custom_theme().
 */
function webform_theme_custom_theme() {

  $theme = variable_get('webform_theme_defaulttheme', 0);

  if (!$theme) {
    return;
  }

  // we want different theme just for view mode, nothing else
  if( arg(0) == 'node' && is_numeric( arg(1) ) && arg(2) == NULL ) {
    $node = node_load(arg(1));
    if( $node->type == 'webform' ) {
      return $theme;
    }

  }
  
}

